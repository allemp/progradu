# This is a basic workflow to help you get started with Actions

name: Build and deploy masters thesis

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: push

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Build thesis
      uses: xu-cheng/latex-action@v2
      with:
        root_file: gradu.tex
        working_directory: speechrecognition/reports/thesis/ 
        args: -jobname=gradu -pdf -file-line-error -halt-on-error -interaction=nonstopmode 
        compiler: latexmk 

    # Runs a set of commands using the runners shell
    - name: Upload thesis
      uses: actions/upload-artifact@v2
      with:
        name: gradu
        path: speechrecognition/reports/thesis/gradu.pdf
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    
    needs: [build]
    steps:
      - name: Variables
        id: vars
        run: |
          echo «::set-output name=sha8::$(echo ${GITHUB_SHA} | cut -c1-8)»
          
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: gradu 
      - name: Create Release 
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: gradu-${{ steps.vars.outputs.sha8 }}
          release_name: My Masters thesis (version ${{ steps.vars.outputs.sha8 }})
          draft: false
          prerelease: false
      - name: Upload pdf thesis
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./gradu.pdf
          asset_name: my_thesis.pdf
          asset_content_type: application/pdf      
